package com.project.tour.user.mypage;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;

import com.project.tour.DBUtil;

public class MyPageDAO {

	Connection conn;
	PreparedStatement pstat;
	Statement stat;
	ResultSet rs;

	public MyPageDAO() {
		conn = DBUtil.open();
	}

	// 서블릿에서 목록 받아오기
	public ArrayList<MyPageDTO> fList(HashMap<String, String> map) {

		try {

			System.out.println(map);

			String sql = String
					.format("SELECT * From (select a.*, rownum as rnum from vwFood a) where rnum BETWEEN ? and ?");

			pstat = conn.prepareStatement(sql);

			pstat.setString(1, map.get("begin"));
			pstat.setString(2, map.get("end"));

			stat = conn.createStatement();

			rs = pstat.executeQuery();

			ArrayList<MyPageDTO> fList = new ArrayList<MyPageDTO>();

			while (rs.next()) {

				MyPageDTO dto = new MyPageDTO();

				dto.setName(rs.getString("name"));
				dto.setAddress(rs.getString("address"));
				dto.setImage(rs.getString("image"));
				dto.setCategory(rs.getString("category"));
				dto.setLikeCnt(rs.getString("likecnt"));
				dto.setReviewCnt(rs.getString("reviewcnt"));
				dto.setReviewAvg(rs.getString("reviewavg"));

				fList.add(dto);

			}

			return fList;

		} catch (Exception e) {
			System.out.println("MyPageDAO.fList");
			e.printStackTrace();

		}

		return null;
	}

	public ArrayList<MyPageDTO> tList(HashMap<String, String> map) {

		try {

			String sql = "SELECT * From (select b.*, rownum as rnum from vwTour b) where rnum BETWEEN ? and ?";

			pstat = conn.prepareStatement(sql);

			pstat.setString(1, map.get("begin"));
			pstat.setString(2, map.get("end"));

			stat = conn.createStatement();

			rs = pstat.executeQuery();

			ArrayList<MyPageDTO> tList = new ArrayList<MyPageDTO>();

			while (rs.next()) {

				MyPageDTO dto = new MyPageDTO();

				dto.setPlacename(rs.getString("placename"));
				dto.setAddress(rs.getString("address"));
				dto.setImage(rs.getString("image"));
				dto.setCategory(rs.getString("category"));
				dto.setLikeCnt(rs.getString("likecnt"));
				dto.setReviewCnt(rs.getString("reviewcnt"));
				dto.setReviewAvg(rs.getString("reviewavg"));

				tList.add(dto);
			}

			return tList;

		} catch (Exception e) {
			System.out.println("MyPageDAO.tList");
			e.printStackTrace();

		}

		return null;

	}

	public ArrayList<MyPageDTO> lList(HashMap<String, String> map) {

		try {

			String sql = "SELECT * From (select c.*, rownum as rnum from vwLodging c) where rnum BETWEEN ? and ?";

			pstat = conn.prepareStatement(sql);

			pstat.setString(1, map.get("begin"));
			pstat.setString(2, map.get("end"));

			stat = conn.createStatement();

			rs = pstat.executeQuery();

			ArrayList<MyPageDTO> lList = new ArrayList<MyPageDTO>();

			while (rs.next()) {

				MyPageDTO dto = new MyPageDTO();
				dto.setName(rs.getString("name"));
				dto.setAddress(rs.getString("address"));
				dto.setImage(rs.getString("image"));
				dto.setCategory(rs.getString("category"));
				dto.setLikeCnt(rs.getString("likecnt"));
				dto.setReviewCnt(rs.getString("reviewcnt"));
				dto.setReviewAvg(rs.getString("reviewavg"));

				lList.add(dto);

			}

			return lList;

		} catch (Exception e) {
			System.out.println("MyPageDAO.lList");
			e.printStackTrace();

		}

		return null;
	}

	// 음식점 총 갯수 가져오는 메소드
	public int getFoodCnt() {

		try {

			stat = conn.createStatement();

			String sql = "select count(*) as cnt from tblfood";

			rs = stat.executeQuery(sql);

			int result = 0;

			if (rs.next()) {
				result = rs.getInt("cnt");
			}

			rs.close();
			stat.close();

			return result;

		} catch (Exception e) {
			System.out.println("MyPageDAO.getFoodCnt");
			e.printStackTrace();

		}
		return 0;
	}

	public int getTourCnt() {
		try {

			stat = conn.createStatement();

			String sql = "select count(*) as cnt from tblTour";

			rs = stat.executeQuery(sql);

			int result = 0;

			if (rs.next()) {
				result = rs.getInt("cnt");
			}

			rs.close();
			stat.close();

			return result;

		} catch (Exception e) {
			System.out.println("MyPageDAO.getTourCnt");
			e.printStackTrace();

		}
		return 0;
	}

	public int getLodgingCnt() {
		try {

			stat = conn.createStatement();

			String sql = "select count(*) as cnt from tblLodging";

			rs = stat.executeQuery(sql);

			int result = 0;

			if (rs.next()) {
				result = rs.getInt("cnt");
				System.out.println(result);
			}

			rs.close();
			stat.close();
			conn.close();

			return result;

		} catch (Exception e) {
			System.out.println("MyPageDAO.getLodgingCnt");
			e.printStackTrace();

		}
		return 0;
	}

}
